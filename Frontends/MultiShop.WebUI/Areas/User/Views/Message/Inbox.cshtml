@using MultiShop.WebUI.Dtos.MessageDtos
@model List<ResultInboxMessageDto>
@{
    ViewData["Title"] = "Inbox";
    Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
}

<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Inbox</h4>
                <p class="card-description">Messages received</p>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>From</th>
                                <th>Subject</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                var index = 0;
                                foreach (var item in Model)
                                {
                                    index++;
                                    var rowClass = item.IsRead ? "" : "table-info";
                                    <tr id="row-@item.MessageId" class="@rowClass">
                                        <td>@index</td>
                                        <td>@item.SenderId</td>
                                        <td>@item.Subject</td>
                                        <td>@item.MessageDate.ToString("dd MMM yyyy HH:mm")</td>
                                        <td><span id="status-@item.MessageId">@(item.IsRead ? "Read" : "Unread")</span></td>
                                        <td>
                                            <button type="button" class="btn btn-sm btn-primary mr-2" onclick="viewMsg(@item.MessageId)">View</button>
                                            @if (!item.IsRead)
                                            {
                                                <form id="markbtn-@item.MessageId" asp-area="User" asp-controller="Message" asp-action="MarkAsRead" method="post" style="display:inline;">
                                                    <input type="hidden" name="id" value="@item.MessageId" />
                                                    <button type="submit" class="btn btn-sm btn-success">Mark as read</button>
                                                </form>
                                            }
                                        </td>
                                    </tr>
                                    <tr id="msg-@item.MessageId" style="display:none;">
                                        <td colspan="6">
                                            <div class="p-3" style="background:#f8f9fa;border-radius:8px;">
                                                <div class="d-flex justify-content-between align-items-center mb-2">
                                                    <strong>Message</strong>
                                                    <button type="button" class="btn btn-xs btn-outline-secondary" onclick="toggleMsg('msg-@item.MessageId')">Close</button>
                                                </div>
                                                <div>@item.MessageDetail</div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="6">No messages found.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function toggleMsg(id) {
        var row = document.getElementById(id);
        if (!row) return;
        row.style.display = row.style.display === 'none' ? '' : 'none';
    }
    async function viewMsg(messageId) {
        var rowId = 'msg-' + messageId;
        toggleMsg(rowId);
        try {
            var resp = await fetch('/User/Message/MarkAsReadAjax', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'id=' + encodeURIComponent(messageId)
            });
            if (resp && resp.ok) {
                var tr = document.getElementById('row-' + messageId);
                if (tr && tr.classList.contains('table-info')) {
                    tr.classList.remove('table-info');
                }
                var statusEl = document.getElementById('status-' + messageId);
                if (statusEl) statusEl.innerText = 'Read';
                var markForm = document.getElementById('markbtn-' + messageId);
                if (markForm) markForm.style.display = 'none';
            }
        } catch (e) { /* ignore */ }
    }
</script>
